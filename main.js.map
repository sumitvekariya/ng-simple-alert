{"version":3,"sources":["../ng-simple-alert/src/lib/ng-simple-alert.component.ts","../ng-simple-alert/src/lib/ng-simple-alert.module.ts","../ng-simple-alert/src/lib/ng-simple-alert.service.ts","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { AlertMessage, NgSimpleAlertService } from './ng-simple-alert.service';\n\n@Component({\n  selector: 'ng-alert',\n  template: `\n    <div class=\"alert\" *ngIf=\"alertMessage$ | async as alertMessage\" [ngStyle]=\"{ background: alertMessage.color }\">\n      <span class=\"closebtn\" (click)=\"closeAlert()\">&times;</span>\n      <strong>{{ alertMessage?.prefix }}!</strong> {{ alertMessage?.message }}\n    </div>\n  `,\n  styleUrls: ['./ng-simple-alert.component.css'],\n})\nexport class NgSimpleAlertComponent implements OnInit {\n  alertMessage$: Observable<AlertMessage | boolean>;\n  close$ = new Subject<boolean>();\n\n  constructor(private alertService: NgSimpleAlertService) {}\n\n  ngOnInit() {\n    this.alertMessage$ = merge(this.alertService.alertMessage$, this.close$);\n  }\n\n  closeAlert(): void {\n    this.close$.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgSimpleAlertComponent } from './ng-simple-alert.component';\n\n@NgModule({\n  declarations: [NgSimpleAlertComponent],\n  imports: [CommonModule],\n  exports: [NgSimpleAlertComponent],\n})\nexport class NgSimpleAlertModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface AlertMessage {\n  prefix: string;\n  message: string;\n  color: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgSimpleAlertService {\n  public alertMessage$ = new Subject<AlertMessage>();\n\n  public createSuccessAlert(message: string): void {\n    this.alertMessage$.next(this.createAlertMessage('Success', message, 'green'));\n  }\n\n  public createDangerAlert(message: string): void {\n    this.alertMessage$.next(this.createAlertMessage('Danger', message, 'red'));\n  }\n\n  public createWarningAlert(message: string): void {\n    this.alertMessage$.next(this.createAlertMessage('Warning', message, 'darkorange'));\n  }\n\n  public createInfoAlert(message: string): void {\n    this.alertMessage$.next(this.createAlertMessage('Info', message, 'dodgerblue'));\n  }\n\n  private createAlertMessage(prefix: string, message: string, color: string): AlertMessage {\n    return { prefix, message, color };\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { NgSimpleAlertService } from '../../../ng-simple-alert/src/lib/ng-simple-alert.service';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <ng-alert></ng-alert>\n    <button class=\"success\" (click)=\"createSuccessMessage()\">Create success alert</button>\n    <button class=\"danger\" (click)=\"createDangerMessage()\">Create danger alert</button>\n    <button class=\"warning\" (click)=\"createWarningMessage()\">Create warning alert</button>\n    <button class=\"info\" (click)=\"createInfoMessage()\">Create info alert</button>\n  `,\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private alertService: NgSimpleAlertService) {}\n\n  public createSuccessMessage(): void {\n    this.alertService.createSuccessAlert('Sample success message');\n  }\n\n  public createDangerMessage(): void {\n    this.alertService.createDangerAlert('Sample danger message');\n  }\n\n  public createWarningMessage(): void {\n    this.alertService.createWarningAlert('Sample warning message');\n  }\n\n  public createInfoMessage(): void {\n    this.alertService.createInfoAlert('Sample info message');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgSimpleAlertModule } from '../../../ng-simple-alert/src/lib/ng-simple-alert.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, NgSimpleAlertModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}